# dockerfiles/dockerfile.cpu
# Base image without CUDA
FROM python:3.10.16-slim AS base

ENV DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    UV_LINK_MODE=copy

WORKDIR /app

# System deps
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
      ffmpeg git curl ca-certificates && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Add uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /usr/local/bin/

# Copy lockfiles first for better caching
COPY pyproject.toml uv.lock ./

# Install deps (project venv under /app/.venv by default)
# 需要 BuildKit 才能启用 --mount 缓存；没开也不影响构建
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Copy source
COPY . /app

# Install the project itself (no deps, they are already synced)
RUN uv pip install --no-deps .

# Final stage (same as base to keep venv & deps)
FROM base AS final

# Optional Bark install
ARG INSTALL_BARK=false
RUN if [ "$INSTALL_BARK" = "true" ]; then \
      uv pip install git+https://github.com/suno-ai/bark.git ; \
    fi

EXPOSE 12393

CMD ["uv", "run", "run_server.py"]