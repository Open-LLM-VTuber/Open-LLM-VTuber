# Base image without CUDA
FROM python:3.10-slim AS base

# Set up environment
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /app
ENV UV_LINK_MODE=copy

# Install system deps
RUN apt-get update && \
    apt-get install -y --no-install-recommends ffmpeg git && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Add uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Copy dependency definitions and install dependencies (better layer caching)
COPY pyproject.toml uv.lock ./
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Copy full source code
COPY . /app

# Install the actual project (so `from open_llm_vtuber import ...` works)
RUN uv pip install --no-deps .

# Final stage
FROM base AS final

# Optional Bark install
ARG INSTALL_BARK=false
RUN if [ "$INSTALL_BARK" = "true" ]; then \
    uv pip install git+https://github.com/suno-ai/bark.git; \
fi

EXPOSE 12393
CMD ["uv", "run", "run_server.py"]